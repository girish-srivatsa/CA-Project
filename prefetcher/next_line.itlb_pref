#include "cache.h"

void CACHE::itlb_prefetcher_initialize() {
  cout << "CPU " << cpu << " ITLB next line prefetcher" << endl;
}

void CACHE::itlb_prefetcher_operate(uint64_t addr, uint64_t ip,
                                    uint8_t cache_hit, uint8_t type,
                                    uint64_t prefetch_id, uint8_t instruction) {
  uint64_t pf_addr = ((addr >> LOG2_PAGE_SIZE) + 1) << LOG2_PAGE_SIZE;

  DP(if (warmup_complete[cpu]) {
    cout << "[" << NAME << "] " << __func__ << " instr_id: " << prefetch_id
         << hex << " base_cl: " << (addr >> LOG2_PAGE_SIZE);
    cout << " pf_cl: " << (pf_addr >> LOG2_PAGE_SIZE) << " ip: " << ip
         << " cache_hit: " << +cache_hit << " type: " << +type << endl;
  });

  prefetch_translation(ip, pf_addr, FILL_ITLB, 0, prefetch_id, instruction);
}

void CACHE::itlb_prefetcher_cache_fill(uint64_t addr, uint32_t set,
                                       uint32_t way, uint8_t prefetch,
                                       uint64_t evicted_addr,
                                       uint32_t metadata_in) {}

void CACHE::itlb_prefetcher_final_stats() {
  cout << "CPU " << cpu << " ITLB next line prefetcher final stats" << endl;
}
